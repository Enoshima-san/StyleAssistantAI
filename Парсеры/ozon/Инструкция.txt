Перед началом работы необходимо установить библиотеки и ОБЯЗАТЕЛЬНО Google Chrome
pip install selenium requests beautifulsoup4 lxml webdriver-manager schedule

1. Настройка конфигурации
Отредактируйте файл config.py:

python
SEARCH_QUERY = "запрос"  # Поисковый запрос
MAX_PRODUCTS = "ALL"         # "ALL" для всех товаров или число
MAX_WORKERS = 10             # Количество потоков, зависит от интернета, больше >10 может вызвать сбои, нужно тестировать на конкретной системе

Таймауты (в секундах)
PAGE_LOAD_TIMEOUT = 15    # Время загрузки страницы
ELEMENT_TIMEOUT = 8       # Ожидание элементов
SCROLL_DELAY = 1          # Задержка при скроллинге

Настройки повторных попыток
MAX_RETRIES = 3           # Попытки при ошибках
RETRY_DELAY = 3           # Задержка между попытками
TASK_TIMEOUT = 15         # Таймаут на задачу

INCREMENTAL_INTERVAL_MINUTES = 90  # Интервал инкрементального парсинга
FULL_INTERVAL_HOURS = 24          # Интервал полного парсинга

2. Основные команды запуска

ПОЛНЫЙ ПАРСИНГ (все товары заново)
python main.py

ИНКРЕМЕНТАЛЬНЫЙ ПАРСИНГ (Добавляет только новые товары, не трогая существующие.)
incremental_parser.py

Условия работы:

Требуется предварительный полный парсинг

Файл PRODUCTS_DATA.json должен существовать

Находит только товары, которых нет в текущей базе

Необходимо изначально провести полный парсинг товаров, а только после запустить автоматический.

3. АВТОМАТИЧЕСКИЙ ПЛАНИРОВЩИК
python scheduler.py

Режимы работы планировщика
При запуске scheduler.py выбирайте:
1 - Автоматический режим (инкрементальный каждые n минут, полный каждые 24 часа)
2 - Однократный инкрементальный парсинг
3 - Однократный полный парсинг
4 - Статус
0 - Выход


4. Полверка товаров по артикулам

1) Создайте файл Артикулы.txt
2) Добавьте артикулы (по одному на строку)
3) Запустите product_checker.py

5. Результаты работы

Основные файлы данных
PRODUCTS_DATA.json - полная информация о товарах

products_urls_dict.json - словарь ссылок на товары

Проверка на наличие товаров.json - результаты проверки артикулов

Файлы логов
parser.log - логи основного парсера

incremental_parser.log - логи инкрементального парсера

advanced_scheduler.log - логи планировщика

product_checker.log - логи проверки товаров

6. Особенности работы
Полный парсинг (main.py) - перезаписывает все данные

Инкрементальный парсинг (incremental_parser.py) - добавляет только новые товары

Планировщик (scheduler.py) - автоматически запускает оба типа парсинга по расписанию